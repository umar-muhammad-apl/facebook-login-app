# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CBWEB DEPLOYMENT

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]
on: [workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.STAGING_SSH_USER }}
          SSH_KEY: ${{ secrets.STAGING_SSH_KEY }}
          SSH_HOST: ${{ secrets.STAGING_SSH_HOST }}

      - name: Pull latest code from github
        run: ssh staging 'cd CBWEBDEV/ && git pull'
         
      - name: Publish the code
        run: ssh staging 'cd CBWEBDEV/CBWEB && dotnet publish --configuration Release'

      - name: Stop the service
        run: ssh staging 'sudo systemctl stop kestrel-cbweb.service'

      - name: Copy the published files
        run: ssh staging 'cp -r CBWEBDEV/CBWEB/bin/Release/net6.0/publish/* /var/www/cbwebdev/'

      - name: Start the service 
        run: ssh staging 'sudo systemctl start kestrel-cbweb.service'

      - name: Restart the server
        if: ${{ always() }}
        run: ssh staging 'sudo systemctl reload nginx'